plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'rip.diamond'
version = "1.0.0-SNAPSHOT-" + getGitHash()

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

compileJava.options.encoding = 'UTF-8'

compileJava {
    sourceCompatibility = 8
    targetCompatibility = 8
}

String getGitHash() {
    def output = new ByteArrayOutputStream()
    exec {
        standardOutput = output // Only the std, not errors as it's not to worry about as long as it's a repo
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
    }
    return output.toString().trim()
}

repositories {
    mavenLocal()
    mavenCentral()
    flatDir {
        dir("./libs")
    }


    maven {
        name "imanityLibraries"
        url "https://maven.imanity.dev/imanity-libraries"
    }
    maven { url 'https://jitpack.io' }
    //PlaceholderAPI
    maven {
        url "https://repo.extendedclip.com/content/repositories/placeholderapi/"
    }
    //ProtocolLib
    maven {
        url "https://repo.dmulloy2.net/repository/public/"
    }
    //Citizens
    maven {
        name 'citizens-repo'
        url 'https://maven.citizensnpcs.co/repo'
    }
    maven {
        url "https://maven.refinedev.xyz/public-repo"
    }
    maven { url ("https://repo.codemc.io/repository/maven-releases/")
          }
    maven { url ("https://repo.codemc.io/repository/maven-snapshots/")
          }
}

dependencies {
    //dependencies
    implementation 'org.mongodb:mongodb-driver-sync:4.9.0' //MongoDB driver (This has to be included in the plugin jar file, so we use implementation)
    implementation 'rip.diamond:apispigot'
    implementation 'com.github.ben-manes.caffeine:caffeine:2.9.3' //https://github.com/ben-manes/caffeine - A high performance caching library
    testImplementation 'dev.imanity.mockbukkit:MockBukkit1.8:1.0.31'
    implementation 'com.github.retrooper:packetevents-spigot:2.6.0' //PacketEvents For TabListAPI
    testImplementation 'junit:junit:4.13.1'
    implementation files('libs/TabAPI.jar') //TABLIST API
    implementation files('libs/TABLISTDEPEND.jar') //Library for the tablist API to work

    //Libraries from local
    compileOnly name: 'ImanitySpigot-API-2022.08.1b2'
    compileOnly name: 'TacoSpigot-1.8.8'
    compileOnly name: 'FastAsyncWorldEdit-bukkit-18.12.19-d131fa6-1241-22.0.3'
    compileOnly name: 'worldedit-bukkit-6.1.9'
    compileOnly name: 'ViaVersion-4.4.2'

    //Libraries from others
    compileOnly 'me.clip:placeholderapi:2.11.2' //PlaceholderAPI
    compileOnly 'com.comphenix.protocol:ProtocolLib:4.7.0' //ProtocolLib
    compileOnly 'net.citizensnpcs:citizensapi:2.0.30-SNAPSHOT' //Citizens

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
}

test {
    useJUnit()
    maxHeapSize = '1G'
}

configurations {
    testCompile.extendsFrom compileOnly
}

tasks.withType(JavaCompile).configureEach {
    options.forkOptions.jvmArgs.addAll(['--add-opens', 'jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED'])
}